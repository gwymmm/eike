# Lexer

Eigenschaften:

- 2 Zustandsautomaten (?)
- für alle Syntaxen gleich (ubl, cii)

## Basisgrammatik

-- search next element

next-elem := ' ' next-elem
          or '<' begin-elem-or-comm-or-end-elem

begin-stag-or-comm-or-etag := '!' comm
                               or (alphanum) begin-elem
                               or '/' end-elem

comm := (char, not '>') comm
     or '>' next-elem

-- read up to 2 attributes
begin-elem := (alphanum) begin-elem
           or ':' begin-elem
           or ' ' skip-to-attr-1-or-end
           or '>' --<<<< token: STAG

skip-to-attr-1-or-end := ' ' skip-to-attr-1-or-end 
                      or '>' --<<<< token: STAG
                      or (alphanum) attr-1-name

attr-1-name := (alphanum) attr-1-name
            or '=' skip-to-attr-1-value
            or ' ' skip-to-eq-1

skip-to-eq-1 := ' ' skip-to-eq-2
           or '=' skip-to-attr-1-value

skip-to-attr-1-value := ' ' skip-to-attr-1-value
                     or (alphanum) attr-1-value

attr-1-value := (alphanum) attr-1-value
             or ' ' skip-to-attr-2-or-end
             or '>' --<<<<

skip-to-attr-2-or-end := ' ' skip-to-attr-2-or-end
                      or (alphanum) attr2-name
                      or '>' --<<<<

attr-2-name := (alphanum) attr-2-name
            or '=' skip-to-attr-2-value
            or ' ' skip-to-eq-2

skip-to-eq-2 := ' ' skip-to-eq-2
           or '=' skip-to-attr-2-value

skip-to-attr-2-value := ' ' skip-to-attr-2-value
                     or (alphanum) attr-2-value

attr-2-value := (alphanum) attr-2-value
             or ' ' skip-w
             or '>' --<<<<

skip-w := ' ' skip-w
            or '>' --<<<<

end-elem := (alphanum) end-elem
         or ':' end-elem
         or ' ' skip-w
         or '>' --<<<<

## Zusatzgrammatik (für atomare Elemente)

-- the '>' of the STag was already seen
-- read content and then the ETag

content := (char, not '<') content
             or '<' etag

etag := '/' etag-2

etag-2 := (alphanum) etag-2
       or ':' etag-2
       or ' ' skip-w
       or '>' --<<<<

skip-w := ' ' skip-w
       or '>' --<<<<